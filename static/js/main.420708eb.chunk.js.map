{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todoModalId","onOpenModal","className","map","todo","isTodoModalOpen","id","completed","classNames","title","type","onClick","TodoFilter","onSelectFilter","onFilterSelect","onChangeSearch","onSearchChange","onClearSearch","onSearchClear","search","filter","value","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","a","getUser","userId","user","Loader","TodoModal","todoId","setModalTodoId","useState","setUser","useEffect","data","catch","err","Error","message","href","email","name","todosFilter","App","setTodos","visibleTodos","setVisibleTodos","setTodo","modalTodoId","setFilter","setSearch","filterValue","searchValue","toDo","lowerSearchValue","toLowerCase","trim","includes","filteredTodos","length","foundTodo","find","todoFinder","ReactDOM","render","document","getElementById"],"mappings":"oPAUaA,EAAoC,SAAC,GAAD,IAC/CC,EAD+C,EAC/CA,MACAC,EAF+C,EAE/CA,YACAC,EAH+C,EAG/CA,YAH+C,OAK/C,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAACC,GACV,IAAMC,EAAkBL,IAAgBI,EAAKE,GAE7C,OACE,qBAAkB,UAAQ,OAAOJ,UAAU,GAA3C,UACE,oBAAIA,UAAU,eAAd,SAA8BE,EAAKE,KACnC,oBAAIJ,UAAU,eAAd,SAEIE,EAAKG,WACH,sBACEL,UAAU,OACV,UAAQ,gBAFV,SAIE,mBAAGA,UAAU,qBAKrB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWM,IAAW,QAAS,CAC7B,mBAAoBJ,EAAKG,UACzB,mBAAoBH,EAAKG,YAH7B,SAMGH,EAAKK,UAGV,oBAAIP,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVQ,KAAK,SACLC,QAAS,kBAAMV,EAAYG,EAAKE,KAJlC,SAME,sBAAMJ,UAAU,OAAhB,SACE,mBAAGA,UAAWM,IAAW,MAAO,CAC9B,UAAWH,EACX,eAAgBA,cAlCjBD,EAAKE,aCxBXM,EAAwC,SAAC,GAM/C,IALWC,EAKZ,EALJC,eACgBC,EAIZ,EAJJC,eACeC,EAGX,EAHJC,cACAC,EAEI,EAFJA,OACAC,EACI,EADJA,OAMA,OACE,uBAAMlB,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRmB,MAAOD,EACPE,SAAU,SAACC,GAAD,OAAOV,EAAeU,EAAEC,OAAOH,QAH3C,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGnB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRQ,KAAK,OACLR,UAAU,QACVuB,YAAY,YACZJ,MAAOF,EACPG,SA3Ba,SAACC,GACpBR,EAAeQ,EAAEC,OAAOH,UA4BpB,sBAAMnB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdiB,GACC,sBAAMjB,UAAU,gBAAgBwB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRjB,KAAK,SACLR,UAAU,SACVS,QAASM,a,uBC7CvB,SAASW,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,IAAMC,EAAQ,uCAAG,4BAAAC,EAAA,6DAChBzC,EAAQ6B,EAAY,UADJ,kBAGf7B,GAHe,2CAAH,qDAMR0C,EAAO,uCAAG,WAAOC,GAAP,eAAAF,EAAA,sEACFZ,EAAG,iBAAiBc,IADlB,cACfC,EADe,yBAGdA,GAHc,2CAAH,sDCxBPC,G,MAAmB,kBAC9B,qBAAK1C,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCQN2C,EAAsC,SAAC,GAI7C,IAHLzC,EAGI,EAHJA,KACA0C,EAEI,EAFJA,OACAC,EACI,EADJA,eAEA,EAAwBC,mBAAsB,MAA9C,mBAAOL,EAAP,KAAaM,EAAb,KAEAC,qBAAU,WACJ9C,GACFqC,EAAQrC,EAAKsC,QACVP,MAAK,SAACgB,GACLF,EAAQE,MAETC,OAAM,SAACC,GACN,MAAM,IAAIC,MAAMD,EAAIE,cAGzB,IAMH,OACE,sBAAKrD,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBACbyC,EAGA,sBAAKzC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIY4C,KAIZ,wBACEpC,KAAK,SACLR,UAAU,SACV,UAAQ,cACRS,QAxBa,WACvBoC,EAAe,YA2BT,sBAAK7C,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACGE,QADH,IACGA,OADH,EACGA,EAAMK,QAGT,oBAAGP,UAAU,QAAQ,UAAQ,aAA7B,UAEE,wBAAQA,UAAWM,IAAW,mBAAoB,CAChD,oBAAmB,OAACJ,QAAD,IAACA,KAAMG,aAD5B,SAIO,OAAJH,QAAI,IAAJA,KAAMG,UAAY,OAAS,YAG7B,OAED,mBAAGiD,KAAMb,EAAKc,MAAd,gBACGd,QADH,IACGA,OADH,EACGA,EAAMe,gBArCf,cAAC,EAAD,QC5BFC,EAAc,SAAC5D,EAAeqB,GAClC,OAAQA,GACN,IAAK,SACH,OAAOrB,EAAMqB,QAAO,SAAChB,GAAD,OAAWA,EAAKG,aAEtC,IAAK,YACH,OAAOR,EAAMqB,QAAO,SAAChB,GAAD,OAAUA,EAAKG,aAErC,QACE,OAAOR,IAQA6D,EAAgB,WAC3B,MAA0BZ,mBAAiB,IAA3C,mBAAOjD,EAAP,KAAc8D,EAAd,KACA,EAAwCb,mBAAiB,IAAzD,mBAAOc,EAAP,KAAqBC,EAArB,KACA,EAAwBf,mBAAsB,MAA9C,mBAAO5C,EAAP,KAAa4D,EAAb,KACA,EAAsChB,mBAAwB,MAA9D,mBAAOiB,EAAP,KAAoBlB,EAApB,KACA,EAA4BC,mBAAiB,OAA7C,mBAAO5B,EAAP,KAAe8C,EAAf,KACA,EAA4BlB,mBAAiB,IAA7C,mBAAO7B,EAAP,KAAegD,EAAf,KAEAjB,qBAAU,WACRX,IACGJ,MAAK,SAACgB,GACLU,EAASV,GACTY,EAAgBZ,QAEnB,IAoCH,OACE,qCACE,qBAAKjD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEY,eA3Ca,SAACsD,GAC1BF,EAAUE,GACVL,EAAgBJ,EAAY5D,EAAOqE,KA0CvBpD,eAvCO,SAACqD,GACpBF,EAAUE,GACVN,EACEJ,EACE5D,EAAMqB,QAAO,SAACkD,GACZ,IAAMC,EAAmBF,EAAYG,cAAcC,OAGnD,OAFmBH,EAAK7D,MAAM+D,cAEXE,SAASH,MAE9BnD,KA8BQF,cAzBY,WACxB,IAAMyD,EAAgBhB,EAAY5D,EAAOqB,GAEzC+C,EAAU,IACVJ,EAAgBY,IAsBJxD,OAAQA,EACRC,OAAQA,MAIZ,qBAAKlB,UAAU,QAAf,SACI4D,EAAac,OAGX,cAAC,EAAD,CACE7E,MAAO+D,EACP9D,YAAaiE,EACbhE,YA/BM,SAAC6C,GACvB,IAAM+B,EAhDS,SAAC9E,EAAe+C,GACjC,OAAO/C,EAAM+E,MAAK,SAAC1E,GAAD,OAAUA,EAAKE,KAAOwC,MAAW,KA+C/BiC,CAAWjB,EAAchB,GAE3CC,EAAeD,GACfkB,EAAQa,MAsBM,cAAC,EAAD,aAaXZ,GACC,cAAC,EAAD,CACE7D,KAAMA,EACN0C,OAAQmB,EACRlB,eAAgBA,QChH1BiC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.420708eb.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n  todoModalId: number | null;\n  onOpenModal: (todoId: number) => void;\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  todoModalId,\n  onOpenModal,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        const isTodoModalOpen = todoModalId === todo.id;\n\n        return (\n          <tr key={todo.id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {\n                todo.completed && (\n                  <span\n                    className=\"icon\"\n                    data-cy=\"iconCompleted\"\n                  >\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )\n              }\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames('block', {\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onOpenModal(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': !isTodoModalOpen,\n                    'fa-eye-slash': isTodoModalOpen,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype TodoFilterProps = {\n  onFilterSelect: (filter: string) => void;\n  onSearchChange: (search: string) => void;\n  onSearchClear: () => void;\n  search: string;\n  filter: string;\n};\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  onFilterSelect: onSelectFilter,\n  onSearchChange: onChangeSearch,\n  onSearchClear: onClearSearch,\n  search,\n  filter,\n}) => {\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onChangeSearch(e.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(e) => onSelectFilter(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={search}\n          onChange={handleChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {search && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClearSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = async () => {\n  const todos = get<Todo[]>('/todos');\n\n  return todos;\n};\n\nexport const getUser = async (userId: number) => {\n  const user = await get<User>(`/users/${userId}`);\n\n  return user;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype TodoModalProps = {\n  todo: Todo | null;\n  todoId: number | null;\n  setModalTodoId: (todoId: number | null) => void;\n};\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  todo,\n  todoId,\n  setModalTodoId,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then((data) => {\n          setUser(data);\n        })\n        .catch((err) => {\n          throw new Error(err.message);\n        });\n    }\n  }, []);\n\n  const handleCloseModal = () => {\n    setModalTodoId(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={classNames('has-text-success', {\n                'has-text-danger': !todo?.completed,\n              })}\n              >\n                {todo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={user.email}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nconst todosFilter = (todos: Todo[], filter: string) => {\n  switch (filter) {\n    case 'active':\n      return todos.filter((todo) => !todo.completed);\n\n    case 'completed':\n      return todos.filter((todo) => todo.completed);\n\n    default:\n      return todos;\n  }\n};\n\nconst todoFinder = (todos: Todo[], todoId: number) => {\n  return todos.find((todo) => todo.id === todoId) || null;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [modalTodoId, setModalTodoId] = useState<number | null>(null);\n  const [filter, setFilter] = useState<string>('All');\n  const [search, setSearch] = useState<string>('');\n\n  useEffect(() => {\n    getTodos()\n      .then((data) => {\n        setTodos(data);\n        setVisibleTodos(data);\n      });\n  }, []);\n\n  const handleSelectFilter = (filterValue: string) => {\n    setFilter(filterValue);\n    setVisibleTodos(todosFilter(todos, filterValue));\n  };\n\n  const handleSearch = (searchValue: string) => {\n    setSearch(searchValue);\n    setVisibleTodos(\n      todosFilter(\n        todos.filter((toDo) => {\n          const lowerSearchValue = searchValue.toLowerCase().trim();\n          const lowerTitle = toDo.title.toLowerCase();\n\n          return (lowerTitle.includes(lowerSearchValue));\n        }),\n        filter,\n      ),\n    );\n  };\n\n  const handleSearchClear = () => {\n    const filteredTodos = todosFilter(todos, filter);\n\n    setSearch('');\n    setVisibleTodos(filteredTodos);\n  };\n\n  const handleModalOpen = (todoId: number) => {\n    const foundTodo = todoFinder(visibleTodos, todoId);\n\n    setModalTodoId(todoId);\n    setTodo(foundTodo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilterSelect={handleSelectFilter}\n                onSearchChange={handleSearch}\n                onSearchClear={handleSearchClear}\n                search={search}\n                filter={filter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!visibleTodos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    todoModalId={modalTodoId}\n                    onOpenModal={handleModalOpen}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalTodoId && (\n        <TodoModal\n          todo={todo}\n          todoId={modalTodoId}\n          setModalTodoId={setModalTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}