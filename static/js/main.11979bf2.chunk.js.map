{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","todoId","onOpenModal","className","map","todo","isTodoModalOpen","id","classNames","completed","title","type","onClick","TodoFilter","onSelectFilter","onFilterSelect","onChangeSearch","onSearchChange","search","filter","handleSearchChange","useCallback","e","target","value","handleSearchClear","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","a","getUser","userId","user","Loader","TodoModal","setTodo","useState","setUser","useEffect","data","catch","err","Error","message","href","email","name","App","setTodos","setFilter","setSearch","visibleTodos","useMemo","toLowerCase","includes","filterValue","searchValue","length","selectedTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11979bf2.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype TodoListProps = {\n  todos: Todo[];\n  todoId?: number;\n  onOpenModal: (selectedTodo: Todo) => void;\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  todoId,\n  onOpenModal,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        const isTodoModalOpen = todoId === todo.id;\n\n        return (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': isTodoModalOpen,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {\n                todo.completed && (\n                  <span\n                    className=\"icon\"\n                    data-cy=\"iconCompleted\"\n                  >\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )\n              }\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames('block', {\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onOpenModal(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': !isTodoModalOpen,\n                    'fa-eye-slash': isTodoModalOpen,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React, { useCallback } from 'react';\n\ntype TodoFilterProps = {\n  onFilterSelect: (filter: string) => void;\n  onSearchChange: (search: string) => void;\n  search: string;\n  filter: string;\n};\n\nexport const TodoFilter: React.FC<TodoFilterProps> = ({\n  onFilterSelect: onSelectFilter,\n  onSearchChange: onChangeSearch,\n  search,\n  filter,\n}) => {\n  const handleSearchChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      onChangeSearch(e.target.value);\n    }, [onChangeSearch],\n  );\n\n  const handleSearchClear = useCallback(() => {\n    onChangeSearch('');\n  }, [onChangeSearch]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(e) => onSelectFilter(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={search}\n          onChange={handleSearchChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {search && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleSearchClear}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = async () => {\n  const todos = get<Todo[]>('/todos');\n\n  return todos;\n};\n\nexport const getUser = async (userId: number) => {\n  const user = await get<User>(`/users/${userId}`);\n\n  return user;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype TodoModalProps = {\n  todo: Todo | null;\n  setTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<TodoModalProps> = ({\n  todo,\n  setTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId)\n        .then((data) => {\n          setUser(data);\n        })\n        .catch((err) => {\n          throw new Error(err.message);\n        });\n    }\n  }, []);\n\n  const handleCloseModal = () => {\n    setTodo(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={classNames('has-text-success', {\n                'has-text-danger': !todo?.completed,\n              })}\n              >\n                {todo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={user.email}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<string>('All');\n  const [search, setSearch] = useState<string>('');\n\n  useEffect(() => {\n    getTodos()\n      .then((data) => {\n        setTodos(data);\n      });\n  }, []);\n\n  const filteredTodos = useMemo(() => todos\n    .filter(({ title }) => (\n      title.toLowerCase().includes(search.toLowerCase())\n    )), [todos, search]);\n\n  const visibleTodos = filteredTodos.filter(({ completed }) => {\n    switch (filter) {\n      case 'completed':\n        return completed;\n\n      case 'active':\n        return !completed;\n\n      default:\n        return true;\n    }\n  });\n\n  const handleFilterSelect = (filterValue: string) => {\n    setFilter(filterValue);\n  };\n\n  const handleSearch = (searchValue: string) => {\n    setSearch(searchValue);\n  };\n\n  const handleModalOpen = (selectedTodo: Todo) => {\n    setTodo(selectedTodo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onFilterSelect={handleFilterSelect}\n                onSearchChange={handleSearch}\n                search={search}\n                filter={filter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!visibleTodos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    todoId={todo?.id}\n                    onOpenModal={handleModalOpen}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && (\n        <TodoModal\n          todo={todo}\n          setTodo={setTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}